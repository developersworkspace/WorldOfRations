"use strict";
var chai_1 = require("chai");
var formulator_1 = require("./../../core/services/formulator");
var formulation_1 = require("./../../core/models/formulation");
var feedstuff_1 = require("./../../core/models/feedstuff");
var element_1 = require("./../../core/models/element");
var formula_1 = require("./../../core/models/formula");
var uuid = require("uuid");
describe('formulate', function () {
    it('should return feasible result', function () {
        var formulatorService = new formulator_1.FormulatorService();
        var formulation = new formulation_1.Formulation();
        var formula = new formula_1.Formula();
        var proteinId = uuid.v4();
        var energyId = uuid.v4();
        var calciumId = uuid.v4();
        formula.elements.push(new element_1.Element(proteinId, 'Protein', 30, 100000, -1));
        formula.elements.push(new element_1.Element(energyId, 'Energy', 250, 100000, -1));
        formula.elements.push(new element_1.Element(calciumId, 'Calcium', 50, 150, -1));
        formulation.formula = formula;
        var maize = new feedstuff_1.Feedstuff(uuid.v4(), 'Maize', 'Maize', 0, 100, 2.15);
        maize.elements.push(new element_1.Element(proteinId, 'Protein', -1, -1, 9));
        maize.elements.push(new element_1.Element(energyId, 'Energy', -1, -1, 1.1));
        maize.elements.push(new element_1.Element(calciumId, 'Calcium', -1, -1, 0.02));
        var fishmeal = new feedstuff_1.Feedstuff(uuid.v4(), 'Fishmeal', 'Fishmeal', 27, 100, 8);
        fishmeal.elements.push(new element_1.Element(proteinId, 'Protein', -1, -1, 65));
        fishmeal.elements.push(new element_1.Element(energyId, 'Energy', -1, -1, 3.9));
        fishmeal.elements.push(new element_1.Element(calciumId, 'Calcium', -1, -1, 3.7));
        var soymeal = new feedstuff_1.Feedstuff(uuid.v4(), 'Soymeal', 'Soymeal', 0, 100, 6);
        soymeal.elements.push(new element_1.Element(proteinId, 'Protein', -1, -1, 44));
        soymeal.elements.push(new element_1.Element(energyId, 'Energy', -1, -1, 2.57));
        soymeal.elements.push(new element_1.Element(calciumId, 'Calcium', -1, -1, 0.3));
        var ricebran = new feedstuff_1.Feedstuff(uuid.v4(), 'Ricebran', 'Ricebran', 0, 100, 2);
        ricebran.elements.push(new element_1.Element(proteinId, 'Protein', -1, -1, 12));
        ricebran.elements.push(new element_1.Element(energyId, 'Energy', -1, -1, 1.99));
        ricebran.elements.push(new element_1.Element(calciumId, 'Calcium', -1, -1, 0.1));
        var limestone = new feedstuff_1.Feedstuff(uuid.v4(), 'Limestone', 'Limestone', 0, 100, 0.4);
        limestone.elements.push(new element_1.Element(proteinId, 'Protein', -1, -1, 0));
        limestone.elements.push(new element_1.Element(energyId, 'Energy', -1, -1, 0));
        limestone.elements.push(new element_1.Element(calciumId, 'Calcium', -1, -1, 28));
        formulation.feedstuffs.push(maize);
        formulation.feedstuffs.push(fishmeal);
        formulation.feedstuffs.push(soymeal);
        formulation.feedstuffs.push(ricebran);
        formulation.feedstuffs.push(limestone);
        var result = formulatorService.formulate(formulation);
        chai_1.expect(result).to.be.not["null"];
        chai_1.expect(result.feasible).to.be["true"];
    });
});
